{alt!            [[:block 0]]
 alt!!           [[:block 0]]
 are             [[:block 2]]
 as->            [[:block 1]]
 binding         [[:block 1]]
 bound-fn        [[:inner 0]]
 case            [[:block 1]]
 catch           [[:block 2]]
 comment         [[:block 0]]
 cond            [[:block 0]]
 condp           [[:block 2]]
 cond->          [[:block 1]]
 cond->>         [[:block 1]]
 def             [[:inner 0]]
 defmacro        [[:inner 0]]
 defmethod       [[:inner 0]]
 defmulti        [[:inner 0]]
 defn            [[:inner 0]]
 defn-           [[:inner 0]]
 defonce         [[:inner 0]]
 defprotocol     [[:block 1] [:inner 1]]
 defrecord       [[:block 1] [:inner 1]]
 defstruct       [[:block 1]]
 deftest         [[:inner 0]]
 deftype         [[:block 1] [:inner 1]]
 do              [[:block 0]]
 doseq           [[:block 1]]
 dotimes         [[:block 1]]
 doto            [[:block 1]]
 extend          [[:block 1]]
 extend-protocol [[:block 1] [:inner 1]]
 extend-type     [[:block 1] [:inner 1]]
 finally         [[:block 0]]
 fn              [[:inner 0]]
 for             [[:block 1]]
 future          [[:block 0]]
 go              [[:block 0]]
 go-loop         [[:block 1]]
 if              [[:block 1]]
 if-let          [[:block 1]]
 if-not          [[:block 1]]
 if-some         [[:block 1]]
 let             [[:block 1]]
 letfn           [[:block 1] [:inner 2 0]]
 locking         [[:block 1]]
 loop            [[:block 1]]
 match           [[:block 1]]
 ns              [[:block 1]]
 proxy           [[:block 2] [:inner 1]]
 reify           [[:inner 0] [:inner 1]]
 struct-map      [[:block 1]]
 testing         [[:block 1]]
 thread          [[:block 0]]
 thrown?         [[:block 1]]
 thrown-with-msg? [[:block 2]]
 try             [[:block 0]]
 use-fixtures    [[:inner 0]]
 when            [[:block 1]]
 when-first      [[:block 1]]
 when-let        [[:block 1]]
 when-not        [[:block 1]]
 when-some       [[:block 1]]
 while           [[:block 1]]
 with-local-vars [[:block 1]]
 with-open       [[:block 1]]
 with-out-str    [[:block 0]]
 with-precision  [[:block 1]]
 with-redefs     [[:block 1]]
 #"^def"         [[:inner 0]]
 #"^with-"       [[:inner 0]]}
